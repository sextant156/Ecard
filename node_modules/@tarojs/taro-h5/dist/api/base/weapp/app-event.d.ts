import Taro from '@tarojs/api';
declare const onUnhandledRejection: typeof Taro.onUnhandledRejection;
declare const onThemeChange: typeof Taro.onThemeChange;
declare const onPageNotFound: typeof Taro.onPageNotFound;
declare const onError: typeof Taro.onError;
declare const onAudioInterruptionEnd: (option?: {}, ...args: any[]) => Promise<Partial<TaroGeneral.CallbackResult> & Record<string, unknown> & TaroGeneral.CallbackResult>;
declare const onAudioInterruptionBegin: (option?: {}, ...args: any[]) => Promise<Partial<TaroGeneral.CallbackResult> & Record<string, unknown> & TaroGeneral.CallbackResult>;
declare const onAppShow: typeof Taro.onAppShow;
declare const onAppHide: typeof Taro.onAppHide;
declare const offUnhandledRejection: typeof Taro.offUnhandledRejection;
declare const offThemeChange: typeof Taro.offThemeChange;
declare const offPageNotFound: typeof Taro.offPageNotFound;
declare const offError: typeof Taro.offError;
declare const offAudioInterruptionEnd: (option?: {}, ...args: any[]) => Promise<Partial<TaroGeneral.CallbackResult> & Record<string, unknown> & TaroGeneral.CallbackResult>;
declare const offAudioInterruptionBegin: (option?: {}, ...args: any[]) => Promise<Partial<TaroGeneral.CallbackResult> & Record<string, unknown> & TaroGeneral.CallbackResult>;
declare const offAppShow: typeof Taro.offAppShow;
declare const offAppHide: typeof Taro.offAppHide;
export { onUnhandledRejection, onThemeChange, onPageNotFound, onError, onAudioInterruptionEnd, onAudioInterruptionBegin, onAppShow, onAppHide, offUnhandledRejection, offThemeChange, offPageNotFound, offError, offAudioInterruptionEnd, offAudioInterruptionBegin, offAppShow, offAppHide };
