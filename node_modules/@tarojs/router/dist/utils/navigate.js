var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
import MobileDetect from 'mobile-detect';
let md;
let preTitle = document.title;
let isLoadDdEntry = false;
export function getMobileDetect() {
    if (!md) {
        md = new MobileDetect(navigator.userAgent);
    }
    return md;
}
export function setTitle(title) {
    return __awaiter(this, void 0, void 0, function* () {
        if (preTitle === title)
            return title;
        document.title = title;
        preTitle = title;
        if (process.env.SUPPORT_DINGTALK_NAVIGATE !== 'disabled' && isDingTalk()) {
            if (!isLoadDdEntry) {
                isLoadDdEntry = true;
                require('dingtalk-jsapi/platform');
            }
            const setDingTitle = require('dingtalk-jsapi/api/biz/navigation/setTitle').default;
            setDingTitle({ title });
        }
        return title;
    });
}
export function isWeixin() {
    const md = getMobileDetect();
    return md.match(/MicroMessenger/ig);
}
export function isDingTalk() {
    const md = getMobileDetect();
    return md.match(/DingTalk/ig);
}
