{"version":3,"file":"list.js","sources":["../../../../src/components/virtual-list/vue/list.ts"],"sourcesContent":["import { isWebPlatform } from '@tarojs/shared'\nimport memoizeOne from 'memoize-one'\n\nimport { convertNumber2PX } from '../../../utils/convert'\nimport { omit } from '../../../utils/lodash'\nimport { cancelTimeout, requestTimeout } from '../../../utils/timer'\nimport { IS_SCROLLING_DEBOUNCE_INTERVAL } from '../constants'\nimport { getRTLOffsetType } from '../dom-helpers'\nimport Preset from '../preset'\nimport { defaultItemKey, getRectSize, getScrollViewContextNode } from '../utils'\nimport render from './render'\n\nconst isWeb = isWebPlatform()\n\nexport default {\n  props: {\n    height: {\n      type: [String, Number],\n      required: true\n    },\n    width: {\n      type: [String, Number],\n      required: true\n    },\n    itemCount: {\n      type: Number,\n      required: true\n    },\n    itemData: {\n      type: Array,\n      required: true\n    },\n    itemSize: {\n      type: [Number, Function],\n      required: true\n    },\n    unlimitedSize: {\n      type: Boolean,\n      default: false\n    },\n    position: {\n      type: String,\n      default: 'absolute'\n    },\n    initialScrollOffset: {\n      type: Number,\n      default: 0\n    },\n    innerElementType: {\n      type: String,\n      default: isWeb ? 'taro-view-core' : 'view'\n    },\n    direction: {\n      type: String,\n      default: 'ltr'\n    },\n    layout: {\n      type: String,\n      default: 'vertical'\n    },\n    overscanCount: {\n      type: Number,\n      default: 1\n    },\n    placeholderCount: {\n      type: Number\n    },\n    useIsScrolling: {\n      type: Boolean,\n      default: false\n    },\n    item: {\n      required: true\n    },\n    itemKey: String,\n    itemTagName: {\n      type: String,\n      default: isWeb ? 'taro-view-core' : 'view'\n    },\n    innerTagName: {\n      type: String,\n      default: isWeb ? 'taro-view-core' : 'view'\n    },\n    outerTagName: {\n      type: String,\n      default: isWeb ? 'taro-scroll-view-core' : 'scroll-view'\n    },\n    itemElementType: String,\n    outerElementType: String,\n    innerRef: String,\n    outerRef: String,\n    onItemsRendered: Function,\n    onScrollNative: Function,\n    shouldResetStyleCacheOnItemSizeChange: {\n      type: Boolean,\n      default: true\n    },\n  },\n  data () {\n    const preset = new Preset(this.$props, this.refresh)\n    return {\n      itemList: preset.itemList,\n      preset,\n      id: this.$props.id || preset.id,\n      instance: this,\n      isScrolling: false,\n      scrollDirection: 'forward',\n      scrollOffset:\n        typeof this.$props.initialScrollOffset === 'number'\n          ? this.$props.initialScrollOffset\n          : 0,\n      scrollUpdateWasRequested: false,\n      resetIsScrollingTimeoutId: null,\n      refreshCount: 0\n    }\n  },\n  methods: {\n    refresh () {\n      this.refreshCount = this.refreshCount + 1\n    },\n    scrollTo (scrollOffset) {\n      const { enhanced } = this.$props\n      scrollOffset = Math.max(0, scrollOffset)\n      if (this.scrollOffset === scrollOffset) return\n\n      if (enhanced) {\n        const isHorizontal = this.preset.isHorizontal\n        const option: any = {\n          animated: true,\n          duration: 500\n        }\n        if (isHorizontal) {\n          option.left\t= scrollOffset\n        } else {\n          option.top = scrollOffset\n        }\n        return getScrollViewContextNode(`#${this.$data.id}`).then((node: any) => node.scrollTo(option))\n      }\n\n      this.scrollDirection = this.scrollOffset < scrollOffset ? 'forward' : 'backward'\n      this.scrollOffset = scrollOffset\n      this.scrollUpdateWasRequested = true\n\n      this.$nextTick(this._resetIsScrollingDebounced)\n    },\n\n    scrollToItem (index, align = 'auto') {\n      const { itemCount } = this.$props\n      const { scrollOffset } = this.$data\n\n      index = Math.max(0, Math.min(index, itemCount - 1))\n\n      this.scrollTo(\n        this.itemList.getOffsetForIndexAndAlignment(\n          this.$props,\n          index,\n          align,\n          scrollOffset\n        )\n      )\n    },\n\n    _callOnItemsRendered: memoizeOne(\n      function (\n        overscanStartIndex,\n        overscanStopIndex,\n        visibleStartIndex,\n        visibleStopIndex\n      ) {\n        return this.$props.onItemsRendered({\n          overscanStartIndex,\n          overscanStopIndex,\n          visibleStartIndex,\n          visibleStopIndex\n        })\n      }\n    ),\n\n    _callOnScroll: memoizeOne(\n      function (\n        scrollDirection,\n        scrollOffset,\n        scrollUpdateWasRequested,\n        detail\n      ) {\n        this.$emit('scroll', {\n          scrollDirection,\n          scrollOffset,\n          scrollUpdateWasRequested,\n          detail\n        })\n      }\n    ),\n\n    _callPropsCallbacks () {\n      if (typeof this.$props.onItemsRendered === 'function') {\n        const { itemCount } = this.$props\n        if (itemCount > 0) {\n          const [\n            overscanStartIndex,\n            overscanStopIndex,\n            visibleStartIndex,\n            visibleStopIndex\n          ] = this._getRangeToRender()\n          this._callOnItemsRendered(\n            overscanStartIndex,\n            overscanStopIndex,\n            visibleStartIndex,\n            visibleStopIndex\n          )\n        }\n      }\n\n      this._callOnScroll(\n        this.scrollDirection,\n        this.scrollOffset,\n        this.scrollUpdateWasRequested,\n        this.preset.field\n      )\n\n      setTimeout(() => {\n        const [startIndex, stopIndex] = this._getRangeToRender()\n        const isHorizontal = this.preset.isHorizontal\n        for (let index = startIndex; index <= stopIndex; index++) {\n          this._getSizeUploadSync(index, isHorizontal)\n        }\n      }, 0)\n    },\n\n    _getSizeUploadSync (index: number, isHorizontal: boolean) {\n      const ID = `#${this.$data.id}-${index}`\n\n      return new Promise((resolve) => {\n        const success = ({ width, height }) => {\n          const size = isHorizontal ? width : height\n          if (!this.itemList.compareSize(index, size)) {\n            this.itemList.setSize(index, size)\n            resolve(this.itemList.getSize(index))\n          }\n        }\n        const fail = () => {\n          const [startIndex, stopIndex] = this._getRangeToRender()\n          if (index >= startIndex && index <= stopIndex) {\n            setTimeout(() => {\n              getRectSize(ID, success, fail)\n            }, 100)\n          }\n        }\n        getRectSize(ID, success, fail)\n      })\n    },\n\n    _getRangeToRender () {\n      return this.itemList.getRangeToRender(\n        this.$data.scrollDirection,\n        this.$data.scrollOffset,\n        this.$data.isScrolling\n      )\n    },\n\n    _onScrollHorizontal (event) {\n      const {\n        clientWidth = this.itemList.wrapperSize,\n        scrollHeight,\n        scrollWidth = this.itemList.getOffsetSize(),\n        scrollTop,\n        scrollLeft,\n      } = event.currentTarget\n      this.preset.field = {\n        scrollHeight: scrollHeight,\n        scrollWidth: this.itemList.getOffsetSize(),\n        scrollTop: scrollTop,\n        scrollLeft: scrollLeft,\n        clientHeight: scrollHeight,\n        clientWidth: scrollWidth\n      }\n      if (this.$props.onScrollNative) {\n        this.$props.onScrollNative(event)\n      }\n      const diffOffset = this.preset.field.scrollLeft - scrollLeft\n      if (this.scrollOffset === scrollLeft || this.preset.isShaking(diffOffset)) {\n        return\n      }\n\n      let scrollOffset = scrollLeft\n      if (this.preset.isRtl) {\n        // TRICKY According to the spec, scrollLeft should be negative for RTL aligned elements.\n        // This is not the case for all browsers though (e.g. Chrome reports values as positive, measured relative to the left).\n        // It's also easier for this component if we convert offsets to the same format as they would be in for ltr.\n        // So the simplest solution is to determine which browser behavior we're dealing with, and convert based on it.\n        switch (getRTLOffsetType()) {\n          case 'negative':\n            scrollOffset = -scrollLeft\n            break\n          case 'positive-descending':\n            scrollOffset = scrollWidth - clientWidth - scrollLeft\n            break\n        }\n      }\n\n      // Prevent Safari's elastic scrolling from causing visual shaking when scrolling past bounds.\n      scrollOffset = Math.max(\n        0,\n        Math.min(scrollOffset, scrollWidth - clientWidth)\n      )\n      this.preset.field = {\n        scrollWidth: scrollOffset,\n      }\n      this.isScrolling = true\n      this.scrollDirection = this.scrollOffset < scrollLeft ? 'forward' : 'backward'\n      this.scrollOffset = scrollOffset\n      this.scrollUpdateWasRequested = false\n      this.$nextTick(this._resetIsScrollingDebounced)\n    },\n\n    _onScrollVertical (event) {\n      const {\n        clientHeight = this.itemList.wrapperSize,\n        scrollHeight = this.itemList.getOffsetSize(),\n        scrollWidth,\n        scrollTop,\n        scrollLeft,\n      } = event.currentTarget\n      if (this.$props.onScrollNative) {\n        this.$props.onScrollNative(event)\n      }\n      const diffOffset = this.preset.field.scrollTop - scrollTop\n      if (this.scrollOffset === scrollTop || this.preset.isShaking(diffOffset)) {\n        return\n      }\n\n      // Prevent Safari's elastic scrolling from causing visual shaking when scrolling past bounds.\n      const scrollOffset = Math.max(\n        0,\n        Math.min(scrollTop, scrollHeight - clientHeight)\n      )\n      this.preset.field = {\n        scrollHeight: this.itemList.getOffsetSize(),\n        scrollWidth: scrollWidth,\n        scrollTop: scrollOffset,\n        scrollLeft: scrollLeft,\n        clientHeight: clientHeight,\n        clientWidth: scrollWidth,\n        diffOffset: this.preset.field.scrollTop - scrollOffset,\n      }\n\n      this.isScrolling = true\n      this.scrollDirection = this.scrollOffset < scrollOffset ? 'forward' : 'backward'\n      this.scrollOffset = scrollOffset\n      this.scrollUpdateWasRequested = false\n      this.$nextTick(this._resetIsScrollingDebounced)\n    },\n\n    _outerRefSetter (ref) {\n      const {\n        outerRef\n      } = this.$props\n      this._outerRef = ref\n\n      if (typeof outerRef === 'function') {\n        outerRef(ref)\n      } else if (outerRef != null && typeof outerRef === 'object' && outerRef.hasOwnProperty('value')) {\n        outerRef.value = ref\n      }\n    },\n\n    _resetIsScrollingDebounced () {\n      if (this.resetIsScrollingTimeoutId !== null) {\n        cancelTimeout(this.resetIsScrollingTimeoutId)\n      }\n\n      this.resetIsScrollingTimeoutId = requestTimeout(\n        this._resetIsScrolling,\n        IS_SCROLLING_DEBOUNCE_INTERVAL\n      )\n    },\n\n    _resetIsScrolling () {\n      this.resetIsScrollingTimeoutId = null\n      this.isScrolling = false\n      this.$nextTick(() => {\n        this.preset.getItemStyleCache(-1, null)\n      })\n    }\n  },\n  mounted () {\n    const { initialScrollOffset } = this.$props\n\n    if (typeof initialScrollOffset === 'number' && this._outerRef != null) {\n      const outerRef = this._outerRef\n      if (this.preset.isHorizontal) {\n        outerRef.scrollLeft = initialScrollOffset\n      } else {\n        outerRef.scrollTop = initialScrollOffset\n      }\n    }\n\n    this._callPropsCallbacks()\n  },\n  updated () {\n    this.preset.update(this.$props)\n\n    const { scrollOffset, scrollUpdateWasRequested } = this.$data\n\n    if (scrollUpdateWasRequested && this._outerRef != null) {\n      const outerRef = this._outerRef\n\n      if (this.preset.isHorizontal) {\n        if (this.preset.isRtl) {\n          // TRICKY According to the spec, scrollLeft should be negative for RTL aligned elements.\n          // This is not the case for all browsers though (e.g. Chrome reports values as positive, measured relative to the left).\n          // So we need to determine which browser behavior we're dealing with, and mimic it.\n          switch (getRTLOffsetType()) {\n            case 'negative':\n              outerRef.scrollLeft = -scrollOffset\n              break\n            case 'positive-ascending':\n              outerRef.scrollLeft = scrollOffset\n              break\n            default: {\n              const { clientWidth, scrollWidth } = outerRef\n              outerRef.scrollLeft = scrollWidth - clientWidth - scrollOffset\n              break\n            }\n          }\n        } else {\n          outerRef.scrollLeft = scrollOffset\n        }\n      } else {\n        outerRef.scrollTop = scrollOffset\n      }\n    }\n\n    this._callPropsCallbacks()\n  },\n\n  beforeDestroy () {\n    if (this.resetIsScrollingTimeoutId !== null) {\n      cancelTimeout(this.resetIsScrollingTimeoutId)\n    }\n  },\n\n  render () {\n    const {\n      item,\n      direction,\n      height,\n      innerRef,\n      itemCount,\n      itemData,\n      itemKey = defaultItemKey,\n      layout,\n      useIsScrolling,\n      width,\n      enhanced = false\n    } = omit(this.$props, ['innerElementType', 'innerTagName', 'itemElementType', 'itemTagName', 'outerElementType', 'outerTagName', 'position'])\n    const {\n      id,\n      isScrolling,\n      scrollOffset,\n      scrollUpdateWasRequested\n    } = this.$data\n\n    const isHorizontal = this.preset.isHorizontal\n    const placeholderCount = this.preset.placeholderCount\n    const onScroll = isHorizontal\n      ? this._onScrollHorizontal\n      : this._onScrollVertical\n\n    const [startIndex, stopIndex] = this._getRangeToRender()\n\n    const items = []\n    if (itemCount > 0) {\n      const prevPlaceholder = startIndex < placeholderCount ? startIndex : placeholderCount\n      items.push(new Array(prevPlaceholder).fill(-1).map((_, index) => render(\n        this.preset.itemTagName, {\n          key: itemKey(index + startIndex - prevPlaceholder, itemData),\n          style: { display: 'none' }\n        }\n      )))\n      for (let index = startIndex; index <= stopIndex; index++) {\n        const style = this.preset.getItemStyle(index)\n        items.push(\n          render(this.preset.itemTagName, {\n            key: itemKey(index, itemData),\n            style\n          }, [\n            render(item, {\n              id: `${id}-${index}`,\n              props: {\n                id: `${id}-${index}`,\n                data: itemData,\n                index,\n                isScrolling: useIsScrolling ? isScrolling : undefined\n              }\n            })\n          ])\n        )\n      }\n      let restCount = itemCount - stopIndex\n      restCount =  restCount > 0 ? restCount : 0\n      const postPlaceholder = restCount < placeholderCount ? restCount : placeholderCount\n      items.push(new Array(postPlaceholder).fill(-1).map((_, index) => render(\n        this.preset.itemTagName, {\n          key: itemKey(1 + index + stopIndex, itemData),\n          style: { display: 'none' }\n        }\n      )))\n    }\n\n    // Read this value AFTER items have been created,\n    // So their actual sizes (if variable) are taken into consideration.\n    const estimatedTotalSize = convertNumber2PX(this.itemList.getOffsetSize())\n    const outerElementProps: any = {\n      id,\n      ref: this._outerRefSetter,\n      layout,\n      enhanced,\n      style: {\n        position: 'relative',\n        height: convertNumber2PX(height),\n        width: convertNumber2PX(width),\n        overflow: 'auto',\n        WebkitOverflowScrolling: 'touch',\n        willChange: 'transform',\n        direction\n      },\n      attrs: {\n        scrollY: layout === 'vertical',\n        scrollX: layout === 'horizontal'\n      },\n      on: {\n        scroll: onScroll\n      }\n    }\n\n    if (!enhanced) {\n      if (isHorizontal) {\n        outerElementProps.scrollLeft = scrollUpdateWasRequested ? scrollOffset : this.preset.field.scrollLeft\n      } else {\n        outerElementProps.scrollTop = scrollUpdateWasRequested ? scrollOffset : this.preset.field.scrollTop\n      }\n    }\n\n    if (this.preset.isRelative) {\n      const pre = convertNumber2PX(this.itemList.getOffsetSize(startIndex))\n      return render(this.preset.outerTagName, outerElementProps, [\n        process.env.FRAMEWORK === 'vue3' ? this.$slots.top?.() : this.$slots.top,\n        render(this.preset.itemTagName, {\n          key: `${id}-pre`,\n          id: `${id}-pre`,\n          style: {\n            height: isHorizontal ? '100%' : pre,\n            width: !isHorizontal ? '100%' : pre\n          }\n        }),\n        render(this.preset.innerTagName, {\n          ref: innerRef,\n          key: `${id}-inner`,\n          id: `${id}-inner`,\n          style: {\n            pointerEvents: isScrolling ? 'none' : 'auto',\n            position: 'relative',\n          }\n        }, items),\n        process.env.FRAMEWORK === 'vue3' ? this.$slots.bottom?.() : this.$slots.bottom,\n      ])\n    } else {\n      return render(this.preset.outerTagName, outerElementProps, [\n        process.env.FRAMEWORK === 'vue3' ? this.$slots.top?.() : this.$slots.top,\n        render(this.preset.innerTagName, {\n          ref: innerRef,\n          key: `${id}-inner`,\n          id: `${id}-inner`,\n          style: {\n            height: isHorizontal ? '100%' : estimatedTotalSize,\n            pointerEvents: isScrolling ? 'none' : 'auto',\n            position: 'relative',\n            width: !isHorizontal ? '100%' : estimatedTotalSize\n          }\n        }, items),\n        process.env.FRAMEWORK === 'vue3' ? this.$slots.bottom?.() : this.$slots.bottom,\n      ])\n    }\n  }\n}\n"],"names":[],"mappings":"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"}