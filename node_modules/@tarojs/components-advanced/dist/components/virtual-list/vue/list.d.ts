import Preset from "../preset.js";
declare const _default: {
    props: {
        height: {
            type: (NumberConstructor | StringConstructor)[];
            required: boolean;
        };
        width: {
            type: (NumberConstructor | StringConstructor)[];
            required: boolean;
        };
        itemCount: {
            type: NumberConstructor;
            required: boolean;
        };
        itemData: {
            type: ArrayConstructor;
            required: boolean;
        };
        itemSize: {
            type: (NumberConstructor | FunctionConstructor)[];
            required: boolean;
        };
        unlimitedSize: {
            type: BooleanConstructor;
            default: boolean;
        };
        position: {
            type: StringConstructor;
            default: string;
        };
        initialScrollOffset: {
            type: NumberConstructor;
            default: number;
        };
        innerElementType: {
            type: StringConstructor;
            default: string;
        };
        direction: {
            type: StringConstructor;
            default: string;
        };
        layout: {
            type: StringConstructor;
            default: string;
        };
        overscanCount: {
            type: NumberConstructor;
            default: number;
        };
        placeholderCount: {
            type: NumberConstructor;
        };
        useIsScrolling: {
            type: BooleanConstructor;
            default: boolean;
        };
        item: {
            required: boolean;
        };
        itemKey: StringConstructor;
        itemTagName: {
            type: StringConstructor;
            default: string;
        };
        innerTagName: {
            type: StringConstructor;
            default: string;
        };
        outerTagName: {
            type: StringConstructor;
            default: string;
        };
        itemElementType: StringConstructor;
        outerElementType: StringConstructor;
        innerRef: StringConstructor;
        outerRef: StringConstructor;
        onItemsRendered: FunctionConstructor;
        onScrollNative: FunctionConstructor;
        shouldResetStyleCacheOnItemSizeChange: {
            type: BooleanConstructor;
            default: boolean;
        };
    };
    data(): {
        itemList: import("../list-set.js").default;
        preset: Preset;
        id: any;
        instance: any;
        isScrolling: boolean;
        scrollDirection: string;
        scrollOffset: any;
        scrollUpdateWasRequested: boolean;
        resetIsScrollingTimeoutId: any;
        refreshCount: number;
    };
    methods: {
        refresh(): void;
        scrollTo(scrollOffset: any): Promise<any>;
        scrollToItem(index: any, align?: string): void;
        _callOnItemsRendered: import("memoize-one").MemoizedFn<(this: any, overscanStartIndex: any, overscanStopIndex: any, visibleStartIndex: any, visibleStopIndex: any) => any>;
        _callOnScroll: import("memoize-one").MemoizedFn<(this: any, scrollDirection: any, scrollOffset: any, scrollUpdateWasRequested: any, detail: any) => void>;
        _callPropsCallbacks(): void;
        _getSizeUploadSync(index: number, isHorizontal: boolean): Promise<unknown>;
        _getRangeToRender(): any;
        _onScrollHorizontal(event: any): void;
        _onScrollVertical(event: any): void;
        _outerRefSetter(ref: any): void;
        _resetIsScrollingDebounced(): void;
        _resetIsScrolling(): void;
    };
    mounted(): void;
    updated(): void;
    beforeDestroy(): void;
    render(): import("vue").VNode<import("vue").RendererNode, import("vue").RendererElement, {
        [key: string]: any;
    }>;
};
export { _default as default };
