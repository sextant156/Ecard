import { IProps } from "./preset.js";
type TProps = Pick<IProps, 'width' | 'height' | 'unlimitedSize' | 'itemCount' | 'itemData' | 'itemSize' | 'overscanCount' | 'direction' | 'layout'>;
declare class ListSet {
    protected props: TProps;
    protected refresh?: TFunc;
    list: number[];
    mode?: 'normal' | 'function' | 'unlimited';
    defaultSize: number;
    constructor(props: TProps, refresh?: TFunc);
    get isNormalMode(): boolean;
    get isFunctionMode(): boolean;
    get isUnlimitedMode(): boolean;
    get length(): number;
    get overscan(): number;
    get wrapperSize(): number;
    update(props: TProps): void;
    setSize(i?: number, size?: number): void;
    getSize(i?: number): number;
    getOffsetSize(i?: number): number;
    getSizeCount(offset?: number): number;
    getStartIndex(scrollOffset?: number): number;
    getStopIndex(wrapperSize?: number, scrollOffset?: number, startIndex?: number): number;
    getRangeToRender(direction: 'forward' | 'backward', scrollOffset?: number, block?: boolean): number[];
    getOffsetForIndexAndAlignment(index: number, align: string, scrollOffset: number): number;
    compareSize(i?: number, size?: number): boolean;
}
export { ListSet as default };
