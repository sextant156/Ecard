import { createSelectorQuery } from '@tarojs/taro';

// In DEV mode, this Set helps us only log a warning once per component instance.
// This avoids spamming the console every time a render happens.
const defaultItemKey = (index, _itemData) => index;
function isHorizontalFunc({ direction, layout }) {
    return direction === 'horizontal' || layout === 'horizontal';
}
function isRtlFunc({ direction }) {
    return direction === 'rtl';
}
function getRectSize(id, success, fail, retryMs = 500) {
    const query = createSelectorQuery();
    try {
        query.select(id).boundingClientRect((res) => {
            if (res) {
                success === null || success === void 0 ? void 0 : success(res);
            }
            else {
                fail === null || fail === void 0 ? void 0 : fail();
            }
        }).exec();
    }
    catch (err) {
        setTimeout(() => {
            getRectSize(id, success, fail, retryMs);
        }, retryMs);
    }
}
async function getScrollViewContextNode(id) {
    const query = createSelectorQuery();
    return new Promise((resolve) => query.select(id).node(({ node }) => resolve(node)).exec());
}

export { defaultItemKey, getRectSize, getScrollViewContextNode, isHorizontalFunc, isRtlFunc };
//# sourceMappingURL=utils.js.map
