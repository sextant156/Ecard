{"version":3,"file":"list.js","sources":["../../../../src/components/virtual-list/react/list.ts"],"sourcesContent":["import memoizeOne from 'memoize-one'\nimport React from 'react'\n\nimport { convertNumber2PX } from '../../../utils/convert'\nimport { omit } from '../../../utils/lodash'\nimport { cancelTimeout, requestTimeout } from '../../../utils/timer'\nimport { IS_SCROLLING_DEBOUNCE_INTERVAL } from '../constants'\nimport { getRTLOffsetType } from '../dom-helpers'\nimport ListSet from '../list-set'\nimport Preset from '../preset'\nimport { defaultItemKey, getRectSize, getScrollViewContextNode } from '../utils'\nimport { validateListProps } from './validate'\n\nimport type { IProps } from '../preset'\n\nexport interface IState {\n  id: string\n  instance: List\n  isScrolling: boolean\n  scrollDirection: 'forward' | 'backward'\n  scrollOffset: number\n  scrollUpdateWasRequested: boolean\n  refreshCount: number\n}\n\nexport default class List extends React.PureComponent<IProps, IState> {\n  static defaultProps: IProps = {\n    direction: 'ltr',\n    itemData: undefined,\n    layout: 'vertical',\n    overscanCount: 2,\n    useIsScrolling: false,\n    shouldResetStyleCacheOnItemSizeChange: true\n  }\n\n  static getDerivedStateFromProps (nextProps: IProps, prevState: IState) {\n    return validateListProps(nextProps, prevState)\n  }\n\n  itemList: ListSet\n  preset: Preset\n\n  constructor (props: IProps) {\n    super(props)\n\n    this.preset = new Preset(\n      props,\n      this.refresh\n    )\n    this.itemList = this.preset.itemList\n\n    this.state = {\n      id: this.props.id || this.preset.id,\n      instance: this,\n      isScrolling: false,\n      scrollDirection: 'forward',\n      scrollOffset:\n        typeof this.props.initialScrollOffset === 'number'\n          ? this.props.initialScrollOffset\n          : 0,\n      scrollUpdateWasRequested: false,\n      refreshCount: 0\n    }\n  }\n\n  refresh = () => {\n    if (process.env.FRAMEWORK === 'preact') {\n      this.forceUpdate()\n    } else {\n      this.setState(({ refreshCount }) => ({\n        refreshCount: ++refreshCount\n      }))\n    }\n  }\n\n  _outerRef = undefined\n\n  _resetIsScrollingTimeoutId = null\n\n  _callOnItemsRendered = memoizeOne((overscanStartIndex, overscanStopIndex, visibleStartIndex, visibleStopIndex) => this.props.onItemsRendered({\n    overscanStartIndex,\n    overscanStopIndex,\n    visibleStartIndex,\n    visibleStopIndex\n  }))\n\n  _callOnScroll = memoizeOne((scrollDirection, scrollOffset, scrollUpdateWasRequested, detail) => this.props.onScroll({\n    scrollDirection,\n    scrollOffset,\n    scrollUpdateWasRequested,\n    detail\n  } as any))\n\n  _callPropsCallbacks (prevProps: any = {}, prevState: any = {}) {\n    if (typeof this.props.onItemsRendered === 'function') {\n      if (this.props.itemCount > 0) {\n        if (prevProps && prevProps.itemCount !== this.props.itemCount) {\n          const [overscanStartIndex, overscanStopIndex, visibleStartIndex, visibleStopIndex] = this._getRangeToRender()\n\n          this._callOnItemsRendered(overscanStartIndex, overscanStopIndex, visibleStartIndex, visibleStopIndex)\n        }\n      }\n    }\n\n    if (typeof this.props.onScroll === 'function') {\n      if (!prevState ||\n        prevState.scrollDirection !== this.state.scrollDirection ||\n        prevState.scrollOffset !== this.state.scrollOffset ||\n        prevState.scrollUpdateWasRequested !== this.state.scrollUpdateWasRequested\n      ) {\n        this._callOnScroll(\n          this.state.scrollDirection,\n          this.state.scrollOffset,\n          this.state.scrollUpdateWasRequested,\n          this.preset.field\n        )\n      }\n    }\n\n    setTimeout(() => {\n      const [startIndex, stopIndex] = this._getRangeToRender()\n      const isHorizontal = this.preset.isHorizontal\n      for (let index = startIndex; index <= stopIndex; index++) {\n        this._getSizeUploadSync(index, isHorizontal)\n      }\n    }, 0)\n  }\n\n  _getSizeUploadSync = (index: number, isHorizontal: boolean) => {\n    const ID = `#${this.state.id}-${index}`\n\n    return new Promise((resolve) => {\n      const success = ({ width, height }) => {\n        const size = isHorizontal ? width : height\n        if (!this.itemList.compareSize(index, size)) {\n          this.itemList.setSize(index, size)\n          resolve(this.itemList.getSize(index))\n        }\n      }\n      const fail = () => {\n        const [startIndex, stopIndex] = this._getRangeToRender()\n        if (index >= startIndex && index <= stopIndex) {\n          setTimeout(() => {\n            getRectSize(ID, success, fail)\n          }, 100)\n        }\n      }\n      getRectSize(ID, success, fail)\n    })\n  }\n\n  // Lazily create and cache item styles while scrolling,\n  // So that pure component sCU will prevent re-renders.\n  // We maintain this cache, and pass a style prop rather than index,\n  // So that List can clear cached styles and force item re-render if necessary.\n  _getRangeToRender () {\n    return this.itemList.getRangeToRender(\n      this.state.scrollDirection,\n      this.state.scrollOffset,\n      this.state.isScrolling\n    )\n  }\n\n  _onScrollHorizontal = event => {\n    const {\n      clientWidth = this.itemList.wrapperSize,\n      scrollHeight,\n      scrollWidth = this.itemList.getOffsetSize(),\n      scrollTop,\n      scrollLeft,\n    } = event.currentTarget\n    this.preset.field = {\n      scrollHeight: scrollHeight,\n      scrollWidth: this.itemList.getOffsetSize(),\n      scrollTop: scrollTop,\n      scrollLeft: scrollLeft,\n      clientHeight: scrollHeight,\n      clientWidth: scrollWidth\n    }\n    this.setState((prevState: any) => {\n      const diffOffset = this.preset.field.scrollLeft - scrollLeft\n      if (prevState.scrollOffset === scrollLeft || this.preset.isShaking(diffOffset)) {\n        // Scroll position may have been updated by cDM/cDU,\n        // In which case we don't need to trigger another render,\n        // And we don't want to update state.isScrolling.\n        return null\n      }\n\n      let scrollOffset = scrollLeft\n\n      if (this.preset.isRtl) {\n        // TRICKY According to the spec, scrollLeft should be negative for RTL aligned elements.\n        // This is not the case for all browsers though (e.g. Chrome reports values as positive, measured relative to the left).\n        // It's also easier for this component if we convert offsets to the same format as they would be in for ltr.\n        // So the simplest solution is to determine which browser behavior we're dealing with, and convert based on it.\n        switch (getRTLOffsetType()) {\n          case 'negative':\n            scrollOffset = -scrollLeft\n            break\n\n          case 'positive-descending':\n            scrollOffset = scrollWidth - clientWidth - scrollLeft\n            break\n        }\n      } // Prevent Safari's elastic scrolling from causing visual shaking when scrolling past bounds.\n\n      this.preset.field = {\n        scrollWidth: scrollOffset,\n      }\n      return {\n        isScrolling: true,\n        scrollDirection: prevState.scrollOffset < scrollLeft ? 'forward' : 'backward',\n        scrollOffset,\n        scrollUpdateWasRequested: false\n      }\n    }, this._resetIsScrollingDebounced)\n  }\n\n  _onScrollVertical = event => {\n    const {\n      clientHeight = this.itemList.wrapperSize,\n      scrollHeight = this.itemList.getOffsetSize(),\n      scrollWidth,\n      scrollTop,\n      scrollLeft\n    } = event.currentTarget\n    this.setState((prevState: IState) => {\n      const diffOffset = this.preset.field.scrollTop - scrollTop\n      if (prevState.scrollOffset === scrollTop || this.preset.isShaking(diffOffset)) {\n        // Scroll position may have been updated by cDM/cDU,\n        // In which case we don't need to trigger another render,\n        // And we don't want to update state.isScrolling.\n        return null\n      }\n      // FIXME preact 中使用时，该组件会出现触底滚动事件重复触发导致的抖动问题，后续修复\n      // Prevent Safari's elastic scrolling from causing visual shaking when scrolling past bounds.\n      const scrollOffset = Math.max(0, Math.min(scrollTop, scrollHeight - clientHeight))\n      this.preset.field = {\n        scrollHeight: this.itemList.getOffsetSize(),\n        scrollWidth: scrollWidth,\n        scrollTop: scrollOffset,\n        scrollLeft: scrollLeft,\n        clientHeight: clientHeight,\n        clientWidth: scrollWidth,\n        diffOffset: this.preset.field.scrollTop - scrollOffset,\n      }\n      return {\n        isScrolling: true,\n        scrollDirection: prevState.scrollOffset < scrollOffset ? 'forward' : 'backward',\n        scrollOffset,\n        scrollUpdateWasRequested: false\n      }\n    }, this._resetIsScrollingDebounced)\n  }\n\n  _outerRefSetter = ref => {\n    const {\n      outerRef\n    } = this.props\n    this._outerRef = ref\n\n    if (typeof outerRef === 'function') {\n      outerRef(ref)\n    } else if (outerRef != null && typeof outerRef === 'object' && outerRef.hasOwnProperty('current')) {\n      // @ts-ignore\n      outerRef.current = ref\n    }\n  }\n\n  _resetIsScrollingDebounced = () => {\n    if (this._resetIsScrollingTimeoutId !== null) {\n      cancelTimeout(this._resetIsScrollingTimeoutId)\n    }\n\n    this._resetIsScrollingTimeoutId = requestTimeout(this._resetIsScrolling, IS_SCROLLING_DEBOUNCE_INTERVAL)\n  }\n\n  _resetIsScrolling = () => {\n    this._resetIsScrollingTimeoutId = null\n    this.setState({\n      isScrolling: false\n    }, () => {\n      // Clear style cache after state update has been committed.\n      // This way we don't break pure sCU for items that don't use isScrolling param.\n      this.preset.getItemStyleCache(-1, null)\n    })\n  }\n\n  public scrollTo (scrollOffset = 0) {\n    const { enhanced } = this.props\n    scrollOffset = Math.max(0, scrollOffset)\n    if (this.state.scrollOffset === scrollOffset) return\n\n    if (enhanced) {\n      const isHorizontal = this.preset.isHorizontal\n      const option: any = {\n        animated: true,\n        duration: 500\n      }\n      if (isHorizontal) {\n        option.left\t= scrollOffset\n      } else {\n        option.top = scrollOffset\n      }\n      return getScrollViewContextNode(`#${this.state.id}`).then((node: any) => node.scrollTo(option))\n    }\n\n    this.setState((prevState: IState) => {\n      if (prevState.scrollOffset === scrollOffset) {\n        return null\n      }\n\n      return {\n        scrollDirection: prevState.scrollOffset < scrollOffset ? 'forward' : 'backward',\n        scrollOffset: scrollOffset,\n        scrollUpdateWasRequested: true\n      }\n    }, this._resetIsScrollingDebounced)\n  }\n\n  public scrollToItem (index: number, align = 'auto') {\n    const { itemCount } = this.props\n    const { scrollOffset } = this.state\n    index = Math.max(0, Math.min(index, itemCount - 1))\n    this.scrollTo(this.itemList.getOffsetForIndexAndAlignment(index, align, scrollOffset))\n  }\n\n  componentDidMount () {\n    const { initialScrollOffset } = this.props\n\n    if (typeof initialScrollOffset === 'number' && this._outerRef != null) {\n      const outerRef = this._outerRef\n\n      if (this.preset.isHorizontal) {\n        outerRef.scrollLeft = initialScrollOffset\n      } else {\n        outerRef.scrollTop = initialScrollOffset\n      }\n    }\n\n    this._callPropsCallbacks()\n  }\n\n  componentDidUpdate (prevProps: IProps, prevState: IState) {\n    const { scrollOffset, scrollUpdateWasRequested } = this.state\n\n    this.preset.update(this.props)\n\n    if (scrollUpdateWasRequested && this._outerRef != null) {\n      const outerRef = this._outerRef\n\n      if (this.preset.isHorizontal) {\n        if (this.preset.isRtl) {\n          // TRICKY According to the spec, scrollLeft should be negative for RTL aligned elements.\n          // This is not the case for all browsers though (e.g. Chrome reports values as positive, measured relative to the left).\n          // So we need to determine which browser behavior we're dealing with, and mimic it.\n          switch (getRTLOffsetType()) {\n            case 'negative':\n              outerRef.scrollLeft = -scrollOffset\n              break\n\n            case 'positive-ascending':\n              outerRef.scrollLeft = scrollOffset\n              break\n\n            default:\n              outerRef.scrollLeft = outerRef.scrollWidth - outerRef.clientWidth - scrollOffset\n              break\n          }\n        } else {\n          outerRef.scrollLeft = scrollOffset\n        }\n      } else {\n        outerRef.scrollTop = scrollOffset\n      }\n    }\n\n    this._callPropsCallbacks(prevProps, prevState)\n  }\n\n  componentWillUnmount () {\n    if (this._resetIsScrollingTimeoutId !== null) {\n      cancelTimeout(this._resetIsScrollingTimeoutId)\n    }\n  }\n\n  render () {\n    const {\n      className,\n      direction,\n      height,\n      innerRef,\n      item,\n      itemCount,\n      itemData,\n      itemKey = defaultItemKey,\n      layout,\n      style,\n      useIsScrolling,\n      width,\n      enhanced = false,\n      renderTop,\n      renderBottom,\n      ...rest\n    } = omit(this.props, ['innerElementType', 'innerTagName', 'itemElementType', 'itemTagName', 'outerElementType', 'outerTagName', 'position'])\n    const {\n      id,\n      isScrolling,\n      scrollOffset,\n      scrollUpdateWasRequested\n    } = this.state\n\n    const isHorizontal = this.preset.isHorizontal\n    const placeholderCount = this.preset.placeholderCount\n    const onScroll = isHorizontal\n      ? this._onScrollHorizontal\n      : this._onScrollVertical\n\n    const [startIndex, stopIndex] = this._getRangeToRender()\n\n    const items = []\n\n    if (itemCount > 0) {\n      const prevPlaceholder = startIndex < placeholderCount ? startIndex : placeholderCount\n      items.push(new Array(prevPlaceholder).fill(-1).map((_, index) => React.createElement<any>(\n        this.preset.itemTagName, {\n          key: itemKey(index + startIndex - prevPlaceholder, itemData),\n          style: { display: 'none' }\n        }\n      )))\n      for (let index = startIndex; index <= stopIndex; index++) {\n        const style = this.preset.getItemStyle(index)\n        items.push(React.createElement<any>(this.preset.itemTagName, {\n          key: itemKey(index, itemData),\n          style\n        }, React.createElement(item, {\n          id: `${id}-${index}`,\n          data: itemData,\n          index,\n          isScrolling: useIsScrolling ? isScrolling : undefined\n        })))\n      }\n      let restCount = itemCount - stopIndex\n      restCount =  restCount > 0 ? restCount : 0\n      const postPlaceholder = restCount < placeholderCount ? restCount : placeholderCount\n      items.push(new Array(postPlaceholder).fill(-1).map((_, index) => React.createElement<any>(\n        this.preset.itemTagName, {\n          key: itemKey(1 + index + stopIndex, itemData),\n          style: { display: 'none' }\n        }\n      )))\n    }\n\n    // Read this value AFTER items have been created,\n    // So their actual sizes (if variable) are taken into consideration.\n    const estimatedTotalSize = convertNumber2PX(this.itemList.getOffsetSize())\n    const outerElementProps: any = {\n      ...rest,\n      id,\n      className,\n      onScroll,\n      ref: this._outerRefSetter,\n      layout,\n      enhanced,\n      style: {\n        position: 'relative',\n        height: convertNumber2PX(height),\n        width: convertNumber2PX(width),\n        overflow: 'auto',\n        WebkitOverflowScrolling: 'touch',\n        willChange: 'transform',\n        direction,\n        ...style\n      }\n    }\n\n    if (!enhanced) {\n      if (isHorizontal) {\n        outerElementProps.scrollLeft = scrollUpdateWasRequested ? scrollOffset : this.preset.field.scrollLeft\n      } else {\n        outerElementProps.scrollTop = scrollUpdateWasRequested ? scrollOffset : this.preset.field.scrollTop\n      }\n    }\n\n    if (this.preset.isRelative) {\n      const pre = convertNumber2PX(this.itemList.getOffsetSize(startIndex))\n      return React.createElement(this.preset.outerTagName, outerElementProps,\n        renderTop,\n        React.createElement<any>(this.preset.itemTagName, {\n          key: `${id}-pre`,\n          id: `${id}-pre`,\n          style: {\n            height: isHorizontal ? '100%' : pre,\n            width: !isHorizontal ? '100%' : pre\n          }\n        }),\n        React.createElement<any>(this.preset.innerTagName, {\n          ref: innerRef,\n          key: `${id}-inner`,\n          id: `${id}-inner`,\n          style: {\n            pointerEvents: isScrolling ? 'none' : 'auto',\n            position: 'relative',\n          }\n        }, items),\n        renderBottom\n      )\n    } else {\n      return React.createElement(this.preset.outerTagName, outerElementProps,\n        renderTop,\n        React.createElement<any>(this.preset.innerTagName, {\n          ref: innerRef,\n          key: `${id}-inner`,\n          id: `${id}-inner`,\n          style: {\n            height: isHorizontal ? '100%' : estimatedTotalSize,\n            pointerEvents: isScrolling ? 'none' : 'auto',\n            position: 'relative',\n            width: !isHorizontal ? '100%' : estimatedTotalSize\n          }\n        }, items),\n        renderBottom\n      )\n    }\n  }\n}\n\n// NOTE: I considered further wrapping individual items with a pure ListItem component.\n// This would avoid ever calling the render function for the same index more than once,\n// But it would also add the overhead of a lot of components/fibers.\n// I assume people already do this (render function returning a class component),\n// So my doing it would just unnecessarily double the wrappers.\n"],"names":[],"mappings":"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"}