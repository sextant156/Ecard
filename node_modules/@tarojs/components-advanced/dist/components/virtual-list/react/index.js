import { __rest } from '../../../node_modules/.pnpm/registry.npmjs.org_tslib@2.5.0/node_modules/tslib/tslib.es6.js';
import { ScrollView, View } from '@tarojs/components';
import React from 'react';
import { convertPX2Int } from '../../../utils/convert.js';
import List from './list.js';

const OuterScrollView = React.forwardRef(function OuterScrollView(props, ref) {
    const _a = props, { style, onScroll, onScrollNative, layout } = _a, rest = __rest(_a, ["style", "onScroll", "onScrollNative", "layout"]);
    const handleScroll = (event) => {
        onScroll(Object.assign(Object.assign({}, event), { currentTarget: Object.assign(Object.assign({}, event.detail), { clientWidth: convertPX2Int(style.width), clientHeight: convertPX2Int(style.height) }) }));
        if (typeof onScrollNative === 'function') {
            onScrollNative(event);
        }
    };
    return React.createElement(ScrollView, Object.assign({ ref,
        style, scrollY: layout === 'vertical', scrollX: layout === 'horizontal', onScroll: handleScroll }, rest));
});
const VirtualList = React.forwardRef(function VirtualList(props, ref) {
    const _a = props, { direction = 'ltr', innerElementType = View, itemElementType = View, initialScrollOffset = 0, overscanCount = 1 } = _a, rest = __rest(_a, ["direction", "innerElementType", "itemElementType", "initialScrollOffset", "overscanCount"]);
    if ('children' in rest) {
        console.warn('Taro(VirtualList): children props have been deprecated. ' + 'Please use the item props instead.');
        rest.item = rest.children;
    }
    if (rest.item instanceof Array) {
        console.warn('Taro(VirtualList): item should not be an array');
        rest.item = rest.item[0];
    }
    return React.createElement(List, Object.assign(Object.assign({ ref }, rest), { itemElementType,
        innerElementType, outerElementType: OuterScrollView, direction,
        initialScrollOffset,
        overscanCount }));
});

export { VirtualList as default };
//# sourceMappingURL=index.js.map
