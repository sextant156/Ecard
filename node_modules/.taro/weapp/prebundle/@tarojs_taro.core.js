import { Current, eventCenter, getCurrentInstance, init_runtime_esm, nextTick, options, runtime_esm_exports } from "./chunk-PWLL3Q5K.js";
import { Events, init_shared_esm, isWebPlatform } from "./chunk-QZJC2AGO.js";
import { __commonJS, __esm, __export, __toCommonJS } from "./chunk-P7VEE7PG.js";
// node_modules/@babel/runtime/helpers/esm/typeof.js
function _typeof(obj) {
    "@babel/helpers - typeof";
    return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj2) {
        return typeof obj2;
    } : function(obj2) {
        return obj2 && "function" == typeof Symbol && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    }, _typeof(obj);
}
var init_typeof = __esm({
    "node_modules/@babel/runtime/helpers/esm/typeof.js" () {}
});
// node_modules/@babel/runtime/helpers/esm/toPrimitive.js
function _toPrimitive(input, hint) {
    if (_typeof(input) !== "object" || input === null) return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== void 0) {
        var res = prim.call(input, hint || "default");
        if (_typeof(res) !== "object") return res;
        throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
}
var init_toPrimitive = __esm({
    "node_modules/@babel/runtime/helpers/esm/toPrimitive.js" () {
        init_typeof();
    }
});
// node_modules/@babel/runtime/helpers/esm/toPropertyKey.js
function _toPropertyKey(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
}
var init_toPropertyKey = __esm({
    "node_modules/@babel/runtime/helpers/esm/toPropertyKey.js" () {
        init_typeof();
        init_toPrimitive();
    }
});
// node_modules/@babel/runtime/helpers/esm/defineProperty.js
function _defineProperty(obj, key, value) {
    key = _toPropertyKey(key);
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
var init_defineProperty = __esm({
    "node_modules/@babel/runtime/helpers/esm/defineProperty.js" () {
        init_toPropertyKey();
    }
});
// node_modules/@babel/runtime/helpers/esm/objectSpread2.js
function ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        enumerableOnly && (symbols = symbols.filter(function(sym) {
            return Object.getOwnPropertyDescriptor(object, sym).enumerable;
        })), keys.push.apply(keys, symbols);
    }
    return keys;
}
function _objectSpread2(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = null != arguments[i] ? arguments[i] : {};
        i % 2 ? ownKeys(Object(source), true).forEach(function(key) {
            _defineProperty(target, key, source[key]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
var init_objectSpread2 = __esm({
    "node_modules/@babel/runtime/helpers/esm/objectSpread2.js" () {
        init_defineProperty();
    }
});
// node_modules/@babel/runtime/helpers/esm/classCallCheck.js
function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
    }
}
var init_classCallCheck = __esm({
    "node_modules/@babel/runtime/helpers/esm/classCallCheck.js" () {}
});
// node_modules/@babel/runtime/helpers/esm/createClass.js
function _defineProperties(target, props) {
    for(var i = 0; i < props.length; i++){
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
}
function _createClass(Constructor, protoProps, staticProps) {
    if (protoProps) _defineProperties(Constructor.prototype, protoProps);
    if (staticProps) _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", {
        writable: false
    });
    return Constructor;
}
var init_createClass = __esm({
    "node_modules/@babel/runtime/helpers/esm/createClass.js" () {
        init_toPropertyKey();
    }
});
// node_modules/@tarojs/api/dist/index.esm.js
var index_esm_exports = {};
__export(index_esm_exports, {
    default: ()=>Taro
});
function isFunction(x) {
    return typeof x === "function";
}
function isUndefined(x) {
    return typeof x === "undefined";
}
function isObject(x) {
    return x && _typeof(x) === "object";
}
function throwTypeError(s) {
    throw new TypeError(s);
}
function getEnv() {
    if (true) {
        return ENV_TYPE.WEAPP;
    } else if (false) {
        return ENV_TYPE.ALIPAY;
    } else if (false) {
        return ENV_TYPE.SWAN;
    } else if (false) {
        return ENV_TYPE.TT;
    } else if (false) {
        return ENV_TYPE.JD;
    } else if (false) {
        return ENV_TYPE.QQ;
    } else if (isWeb) {
        return ENV_TYPE.WEB;
    } else if (false) {
        return ENV_TYPE.RN;
    } else if (false) {
        return ENV_TYPE.HARMONY;
    } else if (false) {
        return ENV_TYPE.QUICKAPP;
    } else {
        return "weapp";
    }
}
function interceptorify(promiseifyApi) {
    return new Link(function(chain) {
        return promiseifyApi(chain.requestParams);
    });
}
function timeoutInterceptor(chain) {
    var requestParams = chain.requestParams;
    var p;
    var res = new Promise(function(resolve, reject) {
        var timeout = setTimeout(function() {
            timeout = null;
            reject(new Error("\u7F51\u7EDC\u94FE\u63A5\u8D85\u65F6,\u8BF7\u7A0D\u540E\u518D\u8BD5\uFF01"));
        }, requestParams && requestParams.timeout || 6e4);
        p = chain.proceed(requestParams);
        p.then(function(res2) {
            if (!timeout) return;
            clearTimeout(timeout);
            resolve(res2);
        }).catch(function(err) {
            timeout && clearTimeout(timeout);
            reject(err);
        });
    });
    if (!isUndefined(p) && isFunction(p.abort)) res.abort = p.abort;
    return res;
}
function logInterceptor(chain) {
    var requestParams = chain.requestParams;
    var method = requestParams.method, data = requestParams.data, url = requestParams.url;
    console.log("http ".concat(method || "GET", " --> ").concat(url, " data: "), data);
    var p = chain.proceed(requestParams);
    var res = p.then(function(res2) {
        console.log("http <-- ".concat(url, " result:"), res2);
        return res2;
    });
    if (isFunction(p.abort)) res.abort = p.abort;
    return res;
}
function Behavior(options2) {
    return options2;
}
function getPreload(current) {
    return function(key, val) {
        current.preloadData = isObject(key) ? key : _defineProperty({}, key, val);
    };
}
function getInitPxTransform(taro) {
    return function(config) {
        var _config$designWidth = config.designWidth, designWidth = _config$designWidth === void 0 ? defaultDesignWidth : _config$designWidth, _config$deviceRatio = config.deviceRatio, deviceRatio = _config$deviceRatio === void 0 ? defaultDesignRatio : _config$deviceRatio, _config$baseFontSize = config.baseFontSize, baseFontSize = _config$baseFontSize === void 0 ? defaultBaseFontSize : _config$baseFontSize, _config$targetUnit = config.targetUnit, targetUnit = _config$targetUnit === void 0 ? defaultTargetUnit : _config$targetUnit, _config$unitPrecision = config.unitPrecision, unitPrecision = _config$unitPrecision === void 0 ? defaultUnitPrecision : _config$unitPrecision;
        taro.config = taro.config || {};
        taro.config.designWidth = designWidth;
        taro.config.deviceRatio = deviceRatio;
        taro.config.baseFontSize = baseFontSize;
        taro.config.targetUnit = targetUnit;
        taro.config.unitPrecision = unitPrecision;
    };
}
function getPxTransform(taro) {
    return function(size) {
        var config = taro.config || {};
        var deviceRatio = config.deviceRatio || defaultDesignRatio;
        var baseFontSize = config.baseFontSize;
        var designWidth = function() {
            var input = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 0;
            return isFunction(config.designWidth) ? config.designWidth(input) : config.designWidth || defaultDesignWidth;
        }(size);
        if (!(designWidth in deviceRatio)) {
            throw new Error("deviceRatio \u914D\u7F6E\u4E2D\u4E0D\u5B58\u5728 ".concat(designWidth, " \u7684\u8BBE\u7F6E\uFF01"));
        }
        var formatSize = ~~size;
        var rootValue = 1 / config.deviceRatio[designWidth];
        switch(config.targetUnit){
            case "rem":
                rootValue *= baseFontSize * 2;
                break;
            case "px":
                rootValue *= 2;
                break;
        }
        var val = formatSize / rootValue;
        if (config.unitPrecision >= 0 && config.unitPrecision <= 100) {
            val = Number(val.toFixed(config.unitPrecision));
        }
        return val + config.targetUnit;
    };
}
var isBadObj, ENV_TYPE, isWeb, Chain, Link, interceptors, defaultDesignWidth, defaultDesignRatio, defaultBaseFontSize, defaultUnitPrecision, defaultTargetUnit, Taro;
var init_index_esm = __esm({
    "node_modules/@tarojs/api/dist/index.esm.js" () {
        init_typeof();
        init_runtime_esm();
        init_shared_esm();
        init_objectSpread2();
        init_classCallCheck();
        init_createClass();
        init_defineProperty();
        isBadObj = function isBadObj2(x) {
            return !isObject(x);
        };
        if (!isFunction(Object.assign)) {
            Object.assign = function(target) {
                if (target == null) {
                    throwTypeError("Cannot convert undefined or null to object");
                }
                var to = Object(target);
                for(var index = 1; index < arguments.length; index++){
                    var nextSource = arguments[index];
                    if (nextSource != null) {
                        for(var nextKey in nextSource){
                            if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {
                                to[nextKey] = nextSource[nextKey];
                            }
                        }
                    }
                }
                return to;
            };
        }
        if (!isFunction(Object.defineProperties)) {
            Object.defineProperties = function(obj, properties) {
                function convertToDescriptor(desc) {
                    function hasProperty(obj2, prop) {
                        return Object.prototype.hasOwnProperty.call(obj2, prop);
                    }
                    if (isBadObj(desc)) {
                        throwTypeError("bad desc");
                    }
                    var d = {};
                    if (hasProperty(desc, "enumerable")) d.enumerable = !!desc.enumerable;
                    if (hasProperty(desc, "configurable")) {
                        d.configurable = !!desc.configurable;
                    }
                    if (hasProperty(desc, "value")) d.value = desc.value;
                    if (hasProperty(desc, "writable")) d.writable = !!desc.writable;
                    if (hasProperty(desc, "get")) {
                        var g = desc.get;
                        if (!isFunction(g) && !isUndefined(g)) {
                            throwTypeError("bad get");
                        }
                        d.get = g;
                    }
                    if (hasProperty(desc, "set")) {
                        var s = desc.set;
                        if (!isFunction(s) && !isUndefined(s)) {
                            throwTypeError("bad set");
                        }
                        d.set = s;
                    }
                    if (("get" in d || "set" in d) && ("value" in d || "writable" in d)) {
                        throwTypeError("identity-confused descriptor");
                    }
                    return d;
                }
                if (isBadObj(obj)) throwTypeError("bad obj");
                properties = Object(properties);
                var keys = Object.keys(properties);
                var descs = [];
                for(var i = 0; i < keys.length; i++){
                    descs.push([
                        keys[i],
                        convertToDescriptor(properties[keys[i]])
                    ]);
                }
                for(var _i = 0; _i < descs.length; _i++){
                    Object.defineProperty(obj, descs[_i][0], descs[_i][1]);
                }
                return obj;
            };
        }
        ENV_TYPE = {
            WEAPP: "WEAPP",
            SWAN: "SWAN",
            ALIPAY: "ALIPAY",
            TT: "TT",
            QQ: "QQ",
            JD: "JD",
            WEB: "WEB",
            RN: "RN",
            HARMONY: "HARMONY",
            QUICKAPP: "QUICKAPP"
        };
        isWeb = isWebPlatform();
        Chain = function() {
            function Chain2(requestParams, interceptors2, index) {
                _classCallCheck(this, Chain2);
                this.index = index || 0;
                this.requestParams = requestParams;
                this.interceptors = interceptors2 || [];
            }
            _createClass(Chain2, [
                {
                    key: "proceed",
                    value: function proceed(requestParams) {
                        this.requestParams = requestParams;
                        if (this.index >= this.interceptors.length) {
                            throw new Error("chain \u53C2\u6570\u9519\u8BEF, \u8BF7\u52FF\u76F4\u63A5\u4FEE\u6539 request.chain");
                        }
                        var nextInterceptor = this._getNextInterceptor();
                        var nextChain = this._getNextChain();
                        var p = nextInterceptor(nextChain);
                        var res = p.catch(function(err) {
                            return Promise.reject(err);
                        });
                        Object.keys(p).forEach(function(k) {
                            return isFunction(p[k]) && (res[k] = p[k]);
                        });
                        return res;
                    }
                },
                {
                    key: "_getNextInterceptor",
                    value: function _getNextInterceptor() {
                        return this.interceptors[this.index];
                    }
                },
                {
                    key: "_getNextChain",
                    value: function _getNextChain() {
                        return new Chain2(this.requestParams, this.interceptors, this.index + 1);
                    }
                }
            ]);
            return Chain2;
        }();
        Link = function() {
            function Link2(interceptor) {
                _classCallCheck(this, Link2);
                this.taroInterceptor = interceptor;
                this.chain = new Chain();
            }
            _createClass(Link2, [
                {
                    key: "request",
                    value: function request(requestParams) {
                        var chain = this.chain;
                        var taroInterceptor = this.taroInterceptor;
                        chain.interceptors = chain.interceptors.filter(function(interceptor) {
                            return interceptor !== taroInterceptor;
                        }).concat(taroInterceptor);
                        return chain.proceed(_objectSpread2({}, requestParams));
                    }
                },
                {
                    key: "addInterceptor",
                    value: function addInterceptor(interceptor) {
                        this.chain.interceptors.push(interceptor);
                    }
                },
                {
                    key: "cleanInterceptors",
                    value: function cleanInterceptors() {
                        this.chain = new Chain();
                    }
                }
            ]);
            return Link2;
        }();
        interceptors = Object.freeze({
            __proto__: null,
            timeoutInterceptor,
            logInterceptor
        });
        defaultDesignWidth = 750;
        defaultDesignRatio = {
            640: 2.34 / 2,
            750: 1,
            828: 1.81 / 2
        };
        defaultBaseFontSize = 20;
        defaultUnitPrecision = 5;
        defaultTargetUnit = "rpx";
        Taro = {
            Behavior,
            getEnv,
            ENV_TYPE,
            Link,
            interceptors,
            Current,
            getCurrentInstance,
            options,
            nextTick,
            eventCenter,
            Events,
            getInitPxTransform,
            interceptorify
        };
        Taro.initPxTransform = getInitPxTransform(Taro);
        Taro.preload = getPreload(Current);
        Taro.pxTransform = getPxTransform(Taro);
    }
});
// node_modules/@tarojs/taro/index.js
var require_taro = __commonJS({
    "node_modules/@tarojs/taro/index.js" (exports, module) {
        var { hooks  } = (init_runtime_esm(), __toCommonJS(runtime_esm_exports));
        var taro = (init_index_esm(), __toCommonJS(index_esm_exports)).default;
        if (hooks.isExist("initNativeApi")) {
            hooks.call("initNativeApi", taro);
        }
        module.exports = taro;
        module.exports.default = module.exports;
    }
});
// entry:@tarojs_taro
var require_tarojs_taro = __commonJS({
    "entry:@tarojs_taro" (exports, module) {
        module.exports = require_taro();
    }
});
export default require_tarojs_taro();
